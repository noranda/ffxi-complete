---
description: "IDE setup, tooling, and local development configuration"
globs:
  - "package.json"
  - "vite.config.ts"
  - "vitest.config.ts"
  - ".env*"
  - ".vscode/**"
---

# Development Environment Setup

## Required Tools & Versions

### Core Development Tools
```bash
# Node.js (Latest LTS recommended)
node --version  # Should be 18.x or newer

# Yarn (Package manager)
yarn --version  # Should be 1.22.x or newer

# Install if needed
npm install -g yarn
```

### Package Management
```bash
# Primary commands
yarn install          # Clean installs
yarn add <package>     # Add dependencies
yarn add -D <package>  # Dev dependencies
yarn remove <package>  # Remove dependencies
```

## IDE Configuration

### VS Code Settings
```json
// .vscode/settings.json
{
  "typescript.preferences.importModuleSpecifier": "relative",
  "editor.formatOnSave": true,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true,
    "source.organizeImports": true
  },
  "tailwindCSS.experimental.classRegex": [
    ["cva\\(([^)]*)\\)", "[\"'`](mdc:[^\"'`]*).*?[\"'`]"],
    ["cx\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"]
  ]
}
```

### Recommended Extensions
```json
// .vscode/extensions.json
{
  "recommendations": [
    "esbenp.prettier-vscode",
    "dbaeumer.vscode-eslint",
    "bradlc.vscode-tailwindcss",
    "ms-vscode.vscode-typescript-next",
    "supabase.supabase-vscode"
  ]
}
```

## Local Development Workflow

### Environment Variables
```bash
# .env.local (create this file, never commit it)
VITE_SUPABASE_URL=your_supabase_project_url
VITE_SUPABASE_ANON_KEY=your_supabase_anon_key
```

### Development Commands
```bash
yarn dev         # Start development server
yarn test        # Run tests
yarn type-check  # TypeScript validation
yarn lint        # Lint and fix
yarn build       # Build for production
```

## Database Development

### Supabase CLI Setup
```bash
# Install and setup
yarn global add supabase
supabase login
supabase link --project-ref your-project-id

# Generate types from schema
supabase gen types typescript --linked > src/types/database.types.ts
```

## Testing Environment

### Vitest Configuration
```typescript
// vitest.config.ts
import { defineConfig } from 'vitest/config';
import react from '@vitejs/plugin-react';

export default defineConfig({
  plugins: [react()],
  test: {
    environment: 'jsdom',
    setupFiles: ['./src/test/setup.ts'],
    globals: true,
  },
});
```

### Test Setup
```typescript
// src/test/setup.ts
import { afterEach } from 'vitest';
import { cleanup } from '@testing-library/react';
import '@testing-library/jest-dom/vitest';

afterEach(() => {
  cleanup();
});
```

## Development Utilities

### Environment Configuration
```typescript
// config/index.ts
export const config = {
  supabase: {
    url: import.meta.env.VITE_SUPABASE_URL,
    anonKey: import.meta.env.VITE_SUPABASE_ANON_KEY,
  },
  isDevelopment: import.meta.env.DEV,
  isProduction: import.meta.env.PROD,
};
```

### Development Helpers
```typescript
// utils/dev.ts
export const devLog = (message: string, data?: any) => {
  if (import.meta.env.DEV) {
    console.log(`[DEV] ${message}`, data);
  }
};
```

## Troubleshooting

### Common Issues
```bash
# TypeScript issues
rm -rf node_modules/.cache
yarn type-check

# Build issues  
rm -rf node_modules yarn.lock
yarn install

# Clear Vite cache
rm -rf node_modules/.vite
```

## Environment Validation

### Setup Checklist
- [ ] Node.js and Yarn installed
- [ ] VS Code with recommended extensions
- [ ] Project dependencies installed
- [ ] Environment variables configured
- [ ] Supabase connection working
- [ ] TypeScript compilation working
- [ ] Tests can run successfully

### Validation Commands
```bash
yarn type-check  # TypeScript working
yarn lint        # ESLint working  
yarn test        # Testing working
yarn build       # Build process working
```
