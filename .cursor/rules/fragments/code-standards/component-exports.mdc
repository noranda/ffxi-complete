---
description: "Component export patterns for compound, composable, and single components"
globs:
  - "**/*.tsx"
  - "**/*.jsx"
---

# Component Export Patterns

## Compound Components (Shared State/Logic)

**For components with shared state** (Tabs, Drawer using Radix/Vaul):
```typescript
// ✅ Correct - Export only root with sub-components as properties
const Tabs = Object.assign(TabsRoot, {
  Content: TabsContent,
  List: TabsList,
  Trigger: TabsTrigger,
});

type TabsTypes = {
  Props: TabsProps;
  ContentProps: TabsContentProps;
  ListProps: TabsListProps;
  TriggerProps: TabsTriggerProps;
};

export {Tabs, type TabsTypes};

// Usage:
<Tabs defaultValue="tab1">
  <Tabs.List>
    <Tabs.Trigger value="tab1">Tab 1</Tabs.Trigger>
  </Tabs.List>
  <Tabs.Content value="tab1">Content 1</Tabs.Content>
</Tabs>
```

## Composable Components (Styling/Layout Only)

**For components with only styling coordination** (Card):
```typescript
// ✅ Correct - Export all components individually
export {Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle};

// Usage:
import {Card, CardContent, CardHeader, CardTitle} from '@/components/ui/card';

<Card>
  <CardHeader>
    <CardTitle>Title</CardTitle>
  </CardHeader>
  <CardContent>Content</CardContent>
</Card>
```

## Single Components

**For standalone components** (Button, Input):
```typescript
// ✅ Correct - Normal export with types
export {Button, type ButtonProps};
export {Input, type InputProps};
```

## Export Formatting Rules

```typescript
// ✅ Correct - Single line when under 80 characters
export {Button, type ButtonProps};
export {Card, CardContent, CardHeader, CardTitle};

// ✅ Correct - Multi-line when exceeding 80 characters
export {
  Card,
  CardAction,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
};

// ❌ Incorrect - Separate value and type exports
export {Button};
export type {ButtonProps};

// ❌ Incorrect - Unnecessary multi-line for short exports
export {
  Button,
  type ButtonProps,
};
```

## Component Type Guidelines

**When to use each pattern:**

- **Compound**: Components share state/logic (Radix/Vaul libraries)
- **Composable**: Components only coordinate styling/layout
- **Single**: Standalone functionality

## Best Practices

- **Combine value and type exports** in single statements
- **Use single line** when under 80 characters
- **Sort exports alphabetically** within groups
- **Choose pattern based on component relationship** not personal preference
