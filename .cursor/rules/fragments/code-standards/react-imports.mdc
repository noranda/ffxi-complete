---
description: "React import patterns and type usage standards"
globs:
  - "**/*.tsx"
  - "**/*.jsx"
---

# React Import Standards

## React Import Rules (Required)

**No global React import** - Import only what you need:
```typescript
// ✅ Correct - No global React import
import {useState, useEffect} from 'react';

type ComponentProps = {
  children: React.ReactNode;
  onClick: React.MouseEventHandler<HTMLButtonElement>;
  title: string;
};

const MyComponent: React.FC<ComponentProps> = ({children, onClick, title}) => {
  const [count, setCount] = useState<number>(0);
  
  return (
    <div className="component">
      <h2>{title}</h2>
      <button onClick={onClick}>{children}</button>
    </div>
  );
};

// ❌ Incorrect - Global React import
import * as React from 'react';
import React from 'react';
import React, {useState} from 'react';
```

## React Types - NEVER Import Directly (Critical)

**Always use React.* inline, never import React types directly:**

```typescript
// ❌ NEVER do this - importing React types directly
import type {
  FormEvent,
  MouseEvent,
  ChangeEvent,
  ReactNode,
  ComponentProps,
} from 'react';

// ✅ ALWAYS do this - use React.* inline
import {useState} from 'react';

// Event handlers
const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => { /* ... */ };
const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => { /* ... */ };
const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => { /* ... */ };

// Component types
type ComponentProps = {
  children: React.ReactNode;
  className?: string;
  style?: React.CSSProperties;
};

// Component prop spreading
type ButtonProps = React.ComponentProps<'button'> & {
  variant?: 'primary' | 'secondary';
};
```

## Import Formatting (ESLint Automatic)

**Bracket spacing and sorting handled by ESLint:**
```typescript
// ✅ Correct - No bracket spacing, alphabetical sorting
import {createClient} from '@supabase/supabase-js';
import {describe, expect, it} from 'vitest';
import {render, screen} from '@testing-library/react';
import {useState, useEffect} from 'react';

import {Button} from '@/components/ui/button';
import {utils} from '@/lib/utils';

import {formatDate} from '../utils/date';

// ❌ Incorrect - Bracket spacing, wrong order
import { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { createClient } from '@supabase/supabase-js';
```

## Import Groups (Automatic)

ESLint automatically sorts imports into these groups:
1. **React imports** (always first)
2. **External packages** (npm packages, alphabetical)
3. **Internal packages** (imports with `@/` prefix)
4. **Parent directory imports** (imports with `../`)
5. **Same directory imports** (imports with `./`)
6. **Style imports** (CSS/SCSS files, always last)

## Best Practices

- **No global React imports** - Import only what you need
- **NEVER import React types directly** - Use `React.ReactNode`, `React.MouseEventHandler`, etc. inline
- **Let ESLint sort** - Use `yarn lint --fix` for automatic organization
- **No bracket spacing** - Follow Prettier configuration
- **Alphabetical members** - Sort imported members within imports

## Commands

```bash
yarn lint --fix  # Auto-fix import sorting and formatting
```
