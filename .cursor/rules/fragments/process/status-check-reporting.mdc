---
description: "Status check reporting format and requirements for task completion"
globs:
  - "**/*.md"
  - "**/*.mdc"
---

# Status Check Reporting

## Required Format (End of Response)

**Always include status checks when completing code changes:**

```markdown
## âœ… **Status Check**

ğŸŸ¢/ğŸŸ /ğŸ”´ **Lint**: [Status description]  
ğŸŸ¢/ğŸŸ /ğŸ”´ **Tests**: [Status description]  
ğŸŸ¢/ğŸŸ /ğŸ”´ **Types**: [Status description]  
ğŸŸ¢/ğŸŸ /ğŸ”´ **Format**: [Status description]  
```

## Color Coding

- **ğŸŸ¢ Green**: All checks pass, no issues
- **ğŸŸ  Orange**: Warnings present, no errors
- **ğŸ”´ Red**: Errors present, must be fixed

## Commands to Run

```bash
yarn lint          # ESLint + strict TypeScript
yarn test --run    # Run tests without watch mode
yarn type-check    # TypeScript compiler check
yarn prettier --check .  # Format check
```

## Zero Tolerance Policy

**NEVER proceed with ğŸŸ  or ğŸ”´ status** - fix immediately before continuing:
- ğŸ”´ Red: MUST fix before any other work
- ğŸŸ  Orange: MUST fix unless it's a documented sub-task

## Status Examples

**All Green:**
```
ğŸŸ¢ **Lint**: No issues found  
ğŸŸ¢ **Tests**: All 224 tests passing  
ğŸŸ¢ **Types**: No type errors found  
ğŸŸ¢ **Format**: All files properly formatted  
```

**Issues Found:**
```
ğŸ”´ **Lint**: 5 errors found - must be fixed  
ğŸ”´ **Tests**: 3 tests failing  
ğŸŸ¢ **Types**: No type errors found  
ğŸŸ¢ **Format**: All files properly formatted  
```

## When Required

- After ANY code changes
- At end of EVERY code-related response
- When completing tasks or features
- When user requests verification

**Goal: Every task completion should show ALL GREEN status.**
