---
description: 
globs: 
alwaysApply: false
---
# Status Check Reporting

## End-of-Response Status Checks (Required)

When completing code changes or tasks, always include a status check section at the end of the response to provide immediate feedback on code quality.

## Status Check Format

### Required Checks
```
## âœ… **Status Check**

ğŸŸ¢/ğŸŸ /ğŸ”´ **Lint**: [Status description]  
ğŸŸ¢/ğŸŸ /ğŸ”´ **Tests**: [Status description]  
ğŸŸ¢/ğŸŸ /ğŸ”´ **Format**: [Status description]  
```

### Color Coding Standards
- **ğŸŸ¢ Green dot**: All checks pass with no issues
- **ğŸŸ  Orange dot**: Warnings present but no errors
- **ğŸ”´ Red dot**: Errors present that need to be fixed

### Commands to Run
```bash
# Check linting status
yarn lint

# Check test status  
yarn test:run

# Check formatting status
yarn prettier --check .
```

## Status Examples

### All Green (Perfect)
```
## âœ… **Status Check**

ğŸŸ¢ **Lint**: No issues found  
ğŸŸ¢ **Tests**: All 101 tests passing  
ğŸŸ¢ **Format**: All files properly formatted  
```

### Mixed Status (Warnings)
```
## âœ… **Status Check**

ğŸŸ  **Lint**: 3 warnings (coverage files - non-critical)  
ğŸŸ¢ **Tests**: All 101 tests passing  
ğŸŸ¢ **Format**: All files properly formatted  
```

### Critical Issues (Errors)
```
## âœ… **Status Check**

ğŸ”´ **Lint**: 5 errors found - must be fixed  
ğŸ”´ **Tests**: 3 tests failing  
ğŸŸ¢ **Format**: All files properly formatted  
```

## When to Include Status Checks

### Always Include
- After completing any code changes
- After finishing a task or feature
- After major refactoring or updates
- When user requests verification

### Status Check Content
- **Lint**: ESLint results with error/warning counts
- **Tests**: Test pass/fail status with counts
- **Format**: Prettier formatting compliance

### Benefits
- **Immediate feedback** on code quality
- **Visual indicators** for what needs attention
- **Confidence building** when all checks pass
- **Quick identification** of issues requiring fixes

## Implementation Notes

- Run actual commands to get real status
- Don't assume status - always verify
- Include brief descriptions of issues found
- Prioritize red dots (errors) over orange dots (warnings)
- Keep descriptions concise but informative
