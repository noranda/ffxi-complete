---
description: 
globs: 
alwaysApply: true
---
# Git Workflow

## Branch Naming Conventions
- `feat/feature-name` for new features
- `fix/bug-description` for bug fixes
- `refactor/component-name` for refactoring
- `docs/documentation-update` for documentation
- `test/test-description` for adding or updating tests
- `chore/maintenance-task` for maintenance tasks

## Commit Message Standards

### Conventional Commits Format (Required)
```
<type>[optional scope]: <description>

[optional body]

[optional footer(s)]
```

### Commit Types
- **feat**: A new feature
- **fix**: A bug fix
- **docs**: Documentation only changes
- **style**: Changes that do not affect the meaning of the code (white-space, formatting, etc.)
- **refactor**: A code change that neither fixes a bug nor adds a feature
- **perf**: A code change that improves performance
- **test**: Adding missing tests or correcting existing tests
- **chore**: Changes to the build process or auxiliary tools and libraries

### Message Guidelines
- **Subject line**: 50 characters or less
- **Imperative mood**: "Add feature" not "Added feature"
- **No period**: Don't end the subject line with a period
- **Body**: Wrap at 72 characters, explain what and why vs. how
- **Footer**: Reference issues and breaking changes

### Examples

#### Good Commit Messages
```bash
feat: add character creation form
fix: resolve tab navigation keyboard accessibility
docs: update installation instructions
refactor: extract authentication logic to custom hook
test: add unit tests for Button component
chore: update dependencies to latest versions
```

#### Detailed Commit with Body
```bash
feat: implement character portrait picker

Add component for selecting character portraits during character 
creation. Supports filtering by race and gender with optimized 
image loading.

Closes #123
```

#### Breaking Change
```bash
feat!: migrate to React 19

BREAKING CHANGE: Requires Node.js 18+ and updates component APIs
for automatic ref handling.
```

### Scope Examples (Optional)
- `feat(auth): add OAuth login`
- `fix(ui): resolve button hover states`
- `test(components): add Card component tests`
- `docs(api): update authentication endpoints`

## Code Review Process
- All changes require review before merging
- Test coverage requirements must be met
- Accessibility review for UI changes
- Performance review for significant changes
- Commit message format must follow conventions

## Best Practices
- **Atomic commits**: One logical change per commit
- **Frequent commits**: Commit early and often
- **Meaningful messages**: Explain the why, not just the what
- **Reference issues**: Link to relevant tickets or discussions
