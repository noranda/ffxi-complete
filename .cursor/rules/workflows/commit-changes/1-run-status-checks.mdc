---
description: "Commit workflow step 1: Run comprehensive status checks and verify all quality gates pass"
globs:
---

# Step 1: Run Status Checks

## Goal

Execute all project quality checks and verify that the codebase is in a healthy state before proceeding
with commit creation. All checks must pass green before moving to the next step.

## Required Context/Inputs

- None - this step runs standard project quality checks

## Process

1. **Run ESLint**: Execute `yarn lint` to check for linting issues (capture both errors AND warnings)
2. **Run Tests**: Execute `yarn test --run` to run all tests (using --run flag to avoid watch mode)
3. **Run Type Check**: Execute `yarn type-check` to verify TypeScript compilation
4. **Run Format Check**: Execute `yarn prettier --check .` to verify code formatting
5. **Run Markdown Lint**: Execute `yarn lint:md` to check markdown file formatting

## Quality Gate Requirements

All five checks must pass with exit code 0:

- âœ… **Lint Status**: No ESLint errors
- âœ… **Test Status**: All tests passing
- âœ… **Type Status**: No TypeScript compilation errors  
- âœ… **Format Status**: All files properly formatted
- âœ… **Markdown Status**: All markdown files follow style guidelines

## Expected Outputs

- Status report showing results of all five quality checks
- Clear indication if any checks failed (blocking progression)
- Green light to proceed to step 2 if all checks pass

## Instructions for AI

1. Run all five status check commands and capture full output (not --quiet) to see warnings
2. Parse outputs to count errors AND warnings separately for each tool
3. Report results using the standard status-check-reporting format with emoji indicators:
   - ðŸŸ¢ Green: No errors, no warnings  
   - ðŸŸ  Orange: Warnings present, no errors
   - ðŸ”´ Red: Errors present (may also have warnings)
4. If ANY check has errors, stop the workflow and report the issues - do not proceed
5. If only warnings are present, report them but allow proceeding (user decision)
6. Only if ALL checks are green or orange, confirm readiness to proceed to step 2
7. Wait for explicit user approval before moving to next step

### Command Details for Capturing Output

- **ESLint**: Use `yarn lint` (not --quiet) to see warnings
- **Tests**: Capture test warnings if any appear in output
- **Other tools**: Use standard commands and parse output for warnings

## Failure Handling

If any status check fails:

- Report the specific failures clearly
- Suggest fixes if obvious (lint auto-fix, format auto-fix)
- Do NOT proceed to step 2 until all issues are resolved
- User must fix issues and restart the workflow
